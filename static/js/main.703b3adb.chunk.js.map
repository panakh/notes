{"version":3,"sources":["components/Notes/NotePreview.js","components/Notes.js","components/Notes/Note.js","App.js","index.js"],"names":["NotePreview","makePreview","props","note","text","split","filter","line","trim","index","includes","map","style","fontSize","color","padding","key","makeStyle","borderBottom","background","editing","display","width","cursor","id","this","onClick","onPreviewClick","bind","Component","Notes","notes","editingNoteId","Note","onChange","e","setState","target","name","value","noteStyle","margin","height","borderWidth","borderStyle","borderColor","outline","App","state","onNoteChange","makeEditArea","editingNote","find","notesContainerStyle","previewContainerStyle","ReactDOM","render","document","getElementById"],"mappings":"gQA6CeA,E,2MAxCXC,YAAc,kBACV,EAAKC,MAAMC,KAAKC,KAAKC,MAAM,MACtBC,OAAO,SAACC,GAAD,MAA0B,KAAhBA,EAAKC,SACtBF,OAAO,SAACC,EAAME,GAAP,MAAiB,CAAC,EAAE,GAAGC,SAASD,KACvCE,IAAI,SAACJ,EAAME,GACR,OAAO,uBAAGG,MACN,CACIC,SAAoB,IAAVJ,EAAc,UAAW,UACnCK,MAAiB,IAAVL,EAAc,UAAW,OAChCM,QAAU,cAEhBC,IAAKP,GAAQF,M,EAG3BU,UAAY,WACR,MAAO,CACHC,aAAc,qBACdC,WAAY,EAAKjB,MAAMkB,QAAU,UAAW,OAC5CL,QAAS,YACTM,QAAS,QACTC,MAAO,OACPC,OAAQ,Y,wEAIN,IACCC,EAAMC,KAAKvB,MAAMC,KAAjBqB,GACP,OACI,yBAAKZ,MAAOa,KAAKR,YAAaS,QAASD,KAAKvB,MAAMyB,eAAeC,KAAKH,KAAMD,IAA5E,IAAmFC,KAAKxB,mB,GA9B1E4B,aCkBXC,E,iLAhBH,IAAD,OAEL,OAAOL,KAAKvB,MAAM6B,MAAMpB,IAAI,SAACR,GACzB,IAAMiB,EAAUjB,EAAKqB,KAAO,EAAKtB,MAAM8B,cACvC,OAAQ,kBAAC,EAAD,CAAahB,IAAKb,EAAKqB,GAAIJ,QAASA,EAASjB,KAAMA,EAAMwB,eAAgB,EAAKzB,MAAMyB,uB,GALlFE,aCDdI,E,2MAGFC,SAAW,SAACC,GACR,EAAKC,SAAL,eAAgBD,EAAEE,OAAOC,KAAOH,EAAEE,OAAOE,QACzC,EAAKrC,MAAMgC,SAASC,EAAEE,OAAOE,Q,wEAI7B,OACI,8BAAU3B,MAAO4B,EAAWD,MAAOd,KAAKvB,MAAMC,KAAKC,KAAM8B,SAAUT,KAAKS,e,GAVjEL,aAoBbW,EAAY,CACdzB,QAAS,WACT0B,OAAQ,EACRpB,QAAS,QACTC,MAAO,OACPoB,OAAQ,OACRC,YAAa,YACbC,YAAa,QACbC,YAAa,OACbC,QAAS,QAGEb,I,ujBC/BRc,E,2MACLC,MAAQ,CACNjB,MAAO,CACL,CACEP,GAAI,EACJpB,KAAM,ujBAER,CACEoB,GAAI,EACJpB,KAAM,gBAER,CACEoB,GAAI,EACJpB,KAAM,gBAGV4B,cAAe,G,EAGjBiB,aAAe,SAAC7C,GACd,EAAKgC,SAAL,KAAkB,EAAKY,MAAvB,CAA8BjB,MAAM,YAAK,EAAKiB,MAAMjB,MAAMpB,IAAI,SAACR,GAC7D,OAAOA,EAAKqB,KAAO,EAAKwB,MAAMhB,cAAvB,KACA7B,EADA,CAEHC,SACED,S,EAKV+C,aAAe,WACb,IAAMC,EAAc,EAAKH,MAAMjB,MAAMqB,KAAK,SAACjD,GAAD,OAAUA,EAAKqB,KAAO,EAAKwB,MAAMhB,gBAC3E,OAAO,EAAKgB,MAAMhB,cAAiB,kBAAC,EAAD,CAAM7B,KAAMgD,EAAajB,SAAU,EAAKe,eAAiB,M,EAG9FtB,eAAiB,SAACH,GAChB,EAAKY,SAAL,KAAkB,EAAKY,MAAvB,CAA8BhB,cAAeR,M,wEAI7C,OACE,yBAAKZ,MAAOyC,GACV,yBAAKzC,MAAO0C,GACV,kBAAC,EAAD,CAAOvB,MAAON,KAAKuB,MAAMjB,MAAOC,cAAeP,KAAKuB,MAAMhB,cAAeL,eAAgBF,KAAKE,kBAE/FF,KAAKyB,oB,GA5CKrB,aAkDbwB,EAAsB,CAC1B/B,MAAO,OACPD,QAAS,OACTqB,OAAQ,QAGJY,EAAwB,CAC5BhC,MAAO,MACPoB,OAAQ,QAGKK,IC5DfQ,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.703b3adb.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\n\nclass NotePreview extends Component {\n\n    makePreview = () => \n        this.props.note.text.split(\"\\n\")\n            .filter((line) => line.trim() !== '')\n            .filter((line, index) => [0,1].includes(index))\n            .map((line, index) => {\n                return <p style={\n                    {\n                        fontSize: index === 0 ? 'inherit': 'smaller',\n                        color: index === 0 ? 'inherit': '#999',\n                        padding : '0 10px 0 0'\n                    }\n                } key={index}>{line}</p>\n            });\n\n    makeStyle = () => {\n        return {\n            borderBottom: '1px #c0c0c0 dotted',\n            background: this.props.editing ? '#fbf286': '#fff',\n            padding: '20px 10px',\n            display: 'block',\n            width: '100%',\n            cursor: 'pointer'\n        }\n    }\n    \n    render() {\n        const {id} = this.props.note;\n        return (  \n            <div style={this.makeStyle()} onClick={this.props.onPreviewClick.bind(this, id)}> {this.makePreview()}</div>\n        );\n    }\n}\n\nNotePreview.propTypes = {\n    note: PropTypes.object.isRequired,\n    onPreviewClick: PropTypes.func.isRequired,\n    editing: PropTypes.bool.isRequired\n}\n\n    \nexport default NotePreview;\n","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport NotePreview from './Notes/NotePreview';\n\nclass Notes extends Component {\n  render() {\n\n      return this.props.notes.map((note) => {\n          const editing = note.id === this.props.editingNoteId;\n          return  <NotePreview key={note.id} editing={editing} note={note} onPreviewClick={this.props.onPreviewClick}/>\n      })\n  }\n}\n\nNotes.propTypes = {\n    notes: PropTypes.array.isRequired,\n    onPreviewClick: PropTypes.func.isRequired,\n    editingNoteId: PropTypes.number.isRequired\n};\n\n\nexport default Notes;\n","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\n\nclass Note extends Component {\n\n\n    onChange = (e) => {\n        this.setState({[e.target.name]: e.target.value})\n        this.props.onChange(e.target.value)\n    }\n\n    render() {\n        return (  \n            <textarea style={noteStyle} value={this.props.note.text} onChange={this.onChange}/>\n        );\n    }\n}\n\nNote.propTypes = {\n    note: PropTypes.object.isRequired,\n    onChange: PropTypes.func.isRequired\n}\n\nconst noteStyle = {\n    padding: '5px 10px',\n    margin: 0,\n    display: 'block',\n    width: '100%',\n    height: '100%',\n    borderWidth: '0 0 0 1px',\n    borderStyle: 'solid',\n    borderColor: '#999',\n    outline: 'none'\n};\n\nexport default Note;\n","import React, {Component} from 'react';\nimport Notes from './components/Notes';\nimport Note from './components/Notes/Note';\n\nclass  App extends Component {\n  state = {\n    notes: [\n      {\n        id: 1,\n        text: 'Lorem ipsum dolor sit amet consectetur adipiscing elit. Nam porttitor posuere felis eget cursus. Morbi vehicula massa id elit pharetra sagittis. Donec mi quam, consequat vitae massa id, ultrices consequat ligula. Nulla facilisi. In a dolor eget erat commodo facilisis quis quis tortor. Donec nulla turpis, fringilla vitae vehicula a, bibendum vel turpis. Sed tincidunt, neque ut pharetra consequat, nulla sapien commodo sapien, eget condimentum tellus tortor ut nunc. Fusce facilisis mauris quis tincidunt lacinia. Vestibulum vitae leo in turpis hendrerit luctus.'\n      },\n      {\n        id: 2,\n        text: 'second ipsum'\n      },\n      {\n        id: 3,\n        text: 'lorem ipsum'\n      }\n    ],\n    editingNoteId: 1,\n  }\n  \n  onNoteChange = (text) => {\n    this.setState({...this.state, notes: [...this.state.notes.map((note) => {\n      return note.id === this.state.editingNoteId ? {         \n          ...note,\n          text\n        } : note;\n      \n    })]});\n  }\n\n  makeEditArea = () => {\n    const editingNote = this.state.notes.find((note) => note.id === this.state.editingNoteId);\n    return this.state.editingNoteId ? (<Note note={editingNote} onChange={this.onNoteChange}/>):null;\n  }\n\n  onPreviewClick = (id) => {\n    this.setState({...this.state, editingNoteId: id});\n  }\n\n  render() {\n    return (\n      <div style={notesContainerStyle}>\n        <div style={previewContainerStyle}>\n          <Notes notes={this.state.notes} editingNoteId={this.state.editingNoteId} onPreviewClick={this.onPreviewClick}/>\n        </div>    \n        {this.makeEditArea()}\n      </div>\n);\n    }\n}\n\nconst notesContainerStyle = {\n  width: '100%',\n  display: 'flex',\n  height: '100%'\n};\n\nconst previewContainerStyle = {\n  width: '30%',\n  height: '100%'\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}